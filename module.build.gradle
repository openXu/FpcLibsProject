/*所有希望可以单独运行的库模块（module_xxx）通用gradle配置*/
if (isBuildModule.toBoolean()) {
    apply plugin: 'com.android.application'  //作为独立App应用运行
} else {
    apply plugin: 'com.android.library'       //作为组件运行
}
apply plugin: 'org.greenrobot.greendao' // apply plugin

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion

    defaultConfig {
        //如果是独立模块，则使用当前组件的包名 com.fzy.module.module_xxx
        if (isBuildModule.toBoolean()) {
            applicationId rootProject.ext.android.applicationId + "." + project.getName()
        }
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        //阿里路由框架配置
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName(), AROUTER_GENERATE_DOC: "enable"]
            }
        }
    }
    compileOptions {
        sourceCompatibility rootProject.ext.android.javaVersion
        targetCompatibility rootProject.ext.android.javaVersion
    }
    //统一资源前缀，规范资源引用 module_xxx
//    resourcePrefix project.getName()+"_"
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
            if (isBuildModule.toBoolean()) {
                //独立运行
//                manifest.srcFile 'src/main/alone/AndroidManifest.xml'
            } else {
                //合并到宿主
//                manifest.srcFile 'src/main/AndroidManifest.xml'
                resources {
                    //正式版本时，排除alone文件夹下所有调试文件
//                    exclude 'src/main/alone/*'
                    //正式版本时，排除debug文件夹下所有调试文件
                    exclude 'src/debug/*'
                }
            }
        }
    }
    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    dataBinding {
        enabled true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    //依赖基础库
    if (isBuildModule.toBoolean()) {
        implementation project(':library_base')
    }else{
        implementation project(':FpcLibsProject:library_base')
    }
    //组件中依赖阿里路由编译框架
    annotationProcessor rootProject.ext.dependencies["arouter-compiler"]
}


